{"version":3,"sources":["Feed/Post.js","Feed/TweetBox.js","DBSelector/Selector.js","socket.js","Feed/Feed.js","Reports/LatestNews.js","Reports/Bars.js","Reports/Pie.js","Reports/Reports.js","SidebarOption/SidebarOption.js","SidebarOption/Sidebar.js","Widgets/Widgets.js","App.js","reportWebVitals.js","index.js"],"names":["Post","_field","_val","_id","_field_count","_new_count","a","requestOptions","method","headers","body","JSON","stringify","field","val","id","fieldcount","newcount","db","this","props","fetch","process","window","confirm","console","log","className","Avatar","src","avatar","username","verified","VerifiedUser","date","text","hashtags","map","hash","_t","tag","href","target","rel","upvoted","ThumbUp","onClick","vote","parseInt","upvotes_count","fontSize","ThumbUpOutlined","downvoted","ThumbDown","downvotes_count","ThumbDownOutlined","ChatBubbleOutline","Repeat","reTweet","Component","getCurrentDate","separator","newDate","Date","day","getDate","month","getMonth","year","getFullYear","TweetBox","_db","useState","tweetMessage","setTweetMessage","tweetHashtags","setTweetHashtags","maxLength","value","onChange","e","placeholder","type","Button","disabled","preventDefault","content","replaceAll","split","fecha","Selector","selected","event","changeDB","socket","io","Feed","state","posts","then","response","json","data","setState","getPosts","on","result","reason","tw","LatestNews","require","CanvasJSReact","CanvasJS","CanvasJSChart","Bars","options","animationEnabled","theme","backgroundColor","height","title","axisX","reversed","axisY","includeZero","labelFormatter","addSymbols","dataPoints","y","upvotes","label","downvotes","suffixes","order","Math","max","floor","length","suffix","formatNumber","pow","Pie","array","tmp","total","percents","i","counter","push","toFixed","points","indexLabelFontColor","getPercent","top_five","exportFileName","exportEnabled","legend","fontColor","padding","showInLegend","legendText","toolTipContent","indexLabel","indexLabelPlacement","getPoints","Reports","noticias","vs_upvotes","vs_downvotes","getToday","_fecha","getData","curr","setDate","toISOString","substr","defaultValue","name","changeDate","SidebarOption","url","click","Icon","Sidebar","root","side","dehaze","class_name","HomeIcon","feed","SearchIcon","NotificationsNoneIcon","ListAltIcon","reports","MoreHorizIcon","variant","fullWidth","Widgets","sourceType","screenName","tweetId","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bdf6707b.chunk.js","sourcesContent":["import { Avatar } from \"@material-ui/core\";\nimport {\n    ChatBubbleOutline,\n    Repeat,\n    VerifiedUser,\n    ThumbDown,\n    ThumbDownOutlined,\n    ThumbUp,\n    ThumbUpOutlined\n} from \"@material-ui/icons\";\nimport React, { Component } from \"react\";\nimport \"./Post.css\";\n\nclass Post extends Component {\n\n    async vote(_field, _val, _id, _field_count, _new_count) {\n        const requestOptions = {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify({\n                field: _field,\n                val: _val,\n                id: _id,\n                fieldcount: _field_count,\n                newcount: _new_count,\n                db: this.props.db\n            })\n        };\n        fetch(process.env.REACT_APP_API_URL_VOTE, requestOptions);\n    };\n\n    reTweet() {\n        if (window.confirm(\"¿Deseas compartir el post?\"))\n            console.log(\"Repostear...\");\n        else\n            console.log(\"Nada...\");\n    }\n\n    render() {\n        return (\n            <div className=\"post\" >\n                <div className=\"post__avatar\">\n                    <Avatar src={this.props.avatar} />\n                </div>\n                <div className=\"post__body\">\n                    <div className=\"post__header\">\n                        <div className=\"post__headerText\">\n                            <h3>\n                                {this.props.username}{\" \"}\n                                <span>{this.props.verified && <VerifiedUser className=\"post__badge\" />}</span>\n                                <span className=\"post__headerSpecial\">\n                                    &nbsp;·&nbsp;\n                                </span>\n                                <span className=\"post__headerSpecial\">\n                                    {this.props.date}\n                                </span>\n                            </h3>\n                        </div>\n                        <div className=\"post__headerDescription\">\n                            <p>{this.props.text}</p>\n                        </div>\n                        <div className=\"post__Hashtags\">\n                            {\n                                this.props.hashtags.map((hash) => {\n                                    let _t = hash.tag || hash;\n                                    return <a key={this.props.db + _t + this.props.id} className=\"twitter-hashtag\"\n                                        href={`https://twitter.com/search?q=${_t}`}\n                                        target=\"_blank\"\n                                        rel=\"noreferrer\">\n                                        #{_t}<br /></a>\n                                })\n                            }\n                        </div>\n                    </div>\n                    <br />\n                    <div className=\"post__footer\">\n                        <div className=\"post__icon\">\n                            <div className=\"icon__vote\">\n                                {\n                                    this.props.upvoted\n\n                                        ? <ThumbUp\n                                            onClick={\n                                                () => { this.vote(\"upvoted\", 0, this.props.id, \"upvotes_count\", parseInt(this.props.upvotes_count) - 1); }\n                                            }\n                                            fontSize=\"small\" />\n                                        : <ThumbUpOutlined\n                                            onClick={\n                                                () => { this.vote(\"upvoted\", 1, this.props.id, \"upvotes_count\", parseInt(this.props.upvotes_count) + 1); }\n                                            }\n                                            fontSize=\"small\" />\n                                }\n                            </div>\n                            <p className=\"post__count\">{this.props.upvotes_count}</p>\n                        </div>\n                        <div className=\"post__icon\">\n                            <div className=\"icon__vote\">\n                                {this.props.downvoted\n                                    ? <ThumbDown\n                                        onClick={\n                                            () => { this.vote(\"downvoted\", 0, this.props.id, \"downvotes_count\", parseInt(this.props.downvotes_count) - 1); }\n                                        }\n                                        fontSize=\"small\" />\n                                    : <ThumbDownOutlined\n                                        onClick={\n                                            () => { this.vote(\"downvoted\", 1, this.props.id, \"downvotes_count\", parseInt(this.props.downvotes_count) + 1); }\n                                        }\n                                        fontSize=\"small\" />\n                                }\n                            </div>\n                            <p className=\"post__count\">{this.props.downvotes_count}</p>\n                        </div>\n                        <ChatBubbleOutline fontSize=\"small\" />\n                        <Repeat onClick={() => this.reTweet()} fontSize=\"small\" />\n                    </div>\n                </div>\n            </div>\n        );\n    }\n\n}\n\nexport default Post;","import { Avatar, Button } from \"@material-ui/core\";\nimport React, { useState } from \"react\";\nimport \"./TweetBox.css\";\n\nfunction getCurrentDate(separator) {\n    let newDate = new Date();\n    let day = newDate.getDate();\n    let month = newDate.getMonth() + 1;\n    let year = newDate.getFullYear();\n    return `${day < 10 ? `0${day}` : `${day}`}${separator}${month < 10 ? `0${month}` : `${month}`}${separator}${year}`;\n}\n\nfunction TweetBox({ _db }) {\n    const [tweetMessage, setTweetMessage] = useState(\"\");\n    const [tweetHashtags, setTweetHashtags] = useState(\"\");\n\n    const sendTweet = (e) => {\n        e.preventDefault();\n\n        const requestOptions = {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify({\n                username: \"Sistemas Operativos 1\",\n                content: tweetMessage,\n                hashtags: (tweetHashtags.replaceAll('#', '')).split(' '),\n                upvoted: \"0\",\n                upvotes_count: 0,\n                downvoted: \"0\",\n                downvotes_count: 0,\n                fecha: getCurrentDate('/'),\n                avatar: \"https://upload.wikimedia.org/wikipedia/commons/4/4a/Usac_logo.png\",\n                db: _db\n            })\n        };\n        fetch(process.env.REACT_APP_API_URL_POST, requestOptions);\n\n        setTweetMessage(\"\");\n        setTweetHashtags(\"\");\n    };\n\n    return (\n        <div className=\"tweetBox\">\n            <form>\n                <div className=\"tweetBox__textarea\">\n                    <Avatar src=\"https://upload.wikimedia.org/wikipedia/commons/4/4a/Usac_logo.png\" />\n                    <textarea\n                        maxLength=\"255\"\n                        value={tweetMessage}\n                        onChange={(e) => setTweetMessage(e.target.value)}\n                        placeholder=\"¿Qué está pasando?\"\n                        type=\"text\"\n                    />\n                </div>\n                <div className=\"hashtagBox__input\">\n                    <input\n                        maxLength=\"255\"\n                        value={tweetHashtags}\n                        onChange={(e) => setTweetHashtags(e.target.value)}\n                        placeholder=\"Coloca tus hashtags favoritos\"\n                        type=\"text\"\n                    />\n                </div>\n                <Button disabled={tweetMessage === \"\"} onClick={sendTweet} type=\"submit\" className=\"tweetBox__button\">\n                    Postear\n                </Button>\n            </form>\n        </div>\n    );\n}\n\nexport default TweetBox;","import React from 'react';\nimport \"./Selector.css\";\n\nfunction changeDB(event) {\n    const requestOptions = {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({\n            db: event.target.value\n        })\n    };\n    fetch(process.env.REACT_APP_API_URL_CHANGE_DB, requestOptions);\n}\n\nfunction Selector({ selected }) {\n    return (\n        <select onChange={(e) => { changeDB(e); }}>\n            <option selected={selected === \"1\"} value=\"1\">MySQL</option>\n            <option selected={selected === \"2\"} value=\"2\">Cosmos DB</option>\n        </select>\n    );\n}\n\nexport default Selector;\n","import { io } from 'socket.io-client';\n\nconst socket = io(process.env.REACT_APP_API_URL_ROOT);\n\nexport default socket;\n","import React, { Component } from \"react\";\nimport \"./Feed.css\";\nimport Post from \"./Post\";\nimport TweetBox from \"./TweetBox\";\nimport Selector from '../DBSelector/Selector';\nimport socket from \"../socket\";\n\nclass Feed extends Component {\n\n  constructor() {\n    super();\n    this.state = {\n      posts: [],\n      db: \"1\"\n    }\n  }\n\n  getPosts(_db = this.state.db) {\n    const requestOptions = {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({ db: _db })\n    };\n    fetch(process.env.REACT_APP_API_URL_HOME, requestOptions)\n      .then((response) => response.json())\n      .then((data) => {\n        this.setState({\n          posts: data,\n          db: _db\n        });\n      });\n  }\n\n  componentDidMount() {\n    this.getPosts();\n\n    socket.on('post-added', (result) => {\n      console.log(\"post-added!\")\n      // console.log(result)\n      this.getPosts();\n    });\n\n    socket.on('post-voted', (result) => {\n      console.log(\"post-voted!\")\n      this.getPosts();\n    });\n\n    socket.on('db-changed', (_db) => {\n      console.log(\"database-changed!\", _db);\n      this.getPosts(_db);\n    });\n\n    socket.on('disconnect', (reason) => {\n      console.log('Socket disconnected because of ' + reason);\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"feed\" >\n        <div className=\"feed__header\">\n          <h2>Feed</h2>\n          <Selector selected={this.state.db} />\n        </div>\n        <TweetBox _db={this.state.db} />\n        {\n          this.state.posts.map((tw) => {\n            return <Post key={this.state.db + tw.id}\n              username={tw.username}\n              verified={true}\n              text={tw.content}\n              avatar={tw.avatar || \"https://www.pikpng.com/pngl/m/80-805068_my-profile-icon-blank-profile-picture-circle-clipart.png\"}\n              upvoted={tw.upvoted === 1}\n              upvotes_count={tw.upvotes_count}\n              downvoted={tw.downvoted === 1}\n              downvotes_count={tw.downvotes_count}\n              hashtags={tw.hashtags}\n              date={tw.fecha}\n              id={tw.id}\n              db={this.state.db}\n            />\n          })\n        }\n      </div >\n    );\n  }\n}\n\nexport default Feed;","import React, { Component } from 'react';\nimport \"./LatestNews.css\";\n\nclass LatestNews extends Component {\n\n    render() {\n        return (\n            <div className=\"row__news\">\n                <h3 id=\"username\">{this.props.username}</h3>\n                <p id=\"date\">{this.props.date}</p>\n                <p id=\"text\">{this.props.text}</p>\n                <div className=\"column__hashtags\">\n                    {\n                        this.props.hashtags.map((tag) => {\n                            let _t = (tag.tag || tag);\n                            return (<p key={this.props.db + _t + this.props.id}>#{_t}</p>);\n                        })\n                    }\n                </div>\n            </div>\n        );\n    }\n}\n\n\n\nexport default LatestNews;\n","var React = require('react');\nvar Component = React.Component;\nvar CanvasJSReact = require('canvasjs-react-charts');\nvar CanvasJS = CanvasJSReact.CanvasJS;\nvar CanvasJSChart = CanvasJSReact.CanvasJSChart;\n\nclass Bars extends Component {\n\n    render() {\n        const options = {\n            animationEnabled: true,\n            theme: \"dark1\",\n            backgroundColor: \"transparent\",\n            height: 365,\n            title: {\n                text: \"\"\n            },\n            axisX: {\n                title: \"\",\n                reversed: true\n            },\n            axisY: {\n                title: \"VOTES\",\n                includeZero: true,\n                labelFormatter: this.addSymbols\n            },\n            data: [{\n                type: \"bar\",\n                dataPoints: [\n                    { y: this.props.upvotes, label: \"UPVOTES\" },\n                    { y: this.props.downvotes, label: \"DOWNVOTES\" }\n                ]\n            }]\n        }\n        return (\n            <CanvasJSChart options={options} />\n        );\n    }\n    addSymbols(e) {\n        var suffixes = [\"\", \"K\", \"M\", \"B\"];\n        var order = Math.max(Math.floor(Math.log(e.value) / Math.log(1000)), 0);\n        if (order > suffixes.length - 1)\n            order = suffixes.length - 1;\n        var suffix = suffixes[order];\n        return CanvasJS.formatNumber(e.value / Math.pow(1000, order)) + suffix;\n    }\n}\n\nexport default Bars;","var React = require('react');\nvar Component = React.Component;\nvar CanvasJSReact = require('canvasjs-react-charts');\nvar CanvasJSChart = CanvasJSReact.CanvasJSChart;\n\nclass Pie extends Component {\n\n    getPercent(array) {\n        let tmp = 0, total = 0;\n        let percents = [];\n        for (let i = 0; i < array.length; i++) {\n            const element = array[i].counter;\n            total += element;\n        }\n        for (let i = 0; i < array.length; i++) {\n            const element = array[i].counter;\n            tmp = (element / total) * 100\n            percents.push(tmp.toFixed(2));\n        }\n        return percents;\n    }\n\n    getPoints(array, percents) {\n        let points = [];\n        for (let i = 0; i < array.length; i++) {\n            points.push({\n                y: percents[i],\n                label: array[i].tag,\n                indexLabelFontColor: \"black\"\n            });\n        }\n        return points;\n    }\n\n    render() {\n        let percents = this.getPercent(this.props.top_five);\n        let points = this.getPoints(this.props.top_five, percents);\n        const options = {\n            theme: \"dark1\",\n            backgroundColor: \"#15181c\",\n            height: 325,\n            animationEnabled: true,\n            exportFileName: \"Top 5 Hashtags\",\n            exportEnabled: true,\n            title: {\n                text: \"\"\n            },\n            legend: {\n                fontColor: \"white\",\n                padding: 8\n            },\n            data: [{\n                type: \"pie\",\n                showInLegend: true,\n                legendText: \"{label}\",\n                toolTipContent: \"{label}: <strong>{y}%</strong>\",\n                indexLabel: \"{y}%\",\n                indexLabelPlacement: \"inside\",\n                dataPoints: points\n            }]\n        }\n        return (\n            <CanvasJSChart options={options} />\n        );\n    }\n}\n\nexport default Pie;","import React, { Component } from \"react\";\nimport \"./Reports.css\";\nimport LatestNews from \"./LatestNews\";\nimport Bars from \"./Bars\";\nimport Pie from \"./Pie\";\nimport socket from \"../socket\";\n\nclass Reports extends Component {\n\n    constructor() {\n        super();\n        this.state = {\n            posts: [],\n            noticias: \"\",\n            hashtags: \"\",\n            upvotes: \"\",\n            downvotes: \"\",\n            vs_upvotes: 0,\n            vs_downvotes: 0,\n            top_five: [],\n            db: \"1\",\n            fecha: this.getToday()\n        }\n    }\n\n    getData(_db = this.state.db, _fecha = this.state.fecha) {\n        const requestOptions = {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify({ db: _db, fecha: _fecha })\n        };\n        fetch(process.env.REACT_APP_API_URL_ADMIN, requestOptions)\n            .then((response) => response.json())\n            .then((data) => {\n                console.log(\"retorno: \", data);\n                this.setState({\n                    posts: data.posts || [],\n                    noticias: data.noticias || \"\",\n                    hashtags: data.hashtags || [],\n                    upvotes: data.upvotes || \"\",\n                    downvotes: data.downvotes || \"\",\n                    vs_upvotes: data.vs_upvotes || 0,\n                    vs_downvotes: data.vs_downvotes || 0,\n                    top_five: data.top_five || []\n                });\n            });\n    }\n\n    componentDidMount() {\n        this.getData();\n\n        socket.on('post-added', (result) => {\n            console.log(\"post-added!\")\n            this.getData();\n        });\n        socket.on('post-voted', (result) => {\n            console.log(\"post-voted!\")\n            this.getData();\n        });\n        socket.on('disconnect', (reason) => {\n            console.log('Socket disconnected because of ' + reason);\n        });\n    }\n\n    changeDB(event) {\n        this.setState({\n            db: event.target.value\n        });\n        this.getData(event.target.value) // ()\n    }\n\n    changeDate(event) {\n        this.setState({\n            fecha: event.target.value\n        });\n        this.getData(this.state.db, event.target.value)\n    }\n\n    getToday() {\n        var curr = new Date();\n        curr.setDate(curr.getDate());\n        var date = curr.toISOString().substr(0, 10);\n        return date;\n    }\n\n    render() {\n        return (\n            <div className=\"root__container\">\n\n                <div className=\"reports__header\">\n                    <h1>Reportes</h1>\n                    <select defaultValue={'1'} onChange={(e) => { this.changeDB(e); }}>\n                        <option value=\"1\">MySQL</option>\n                        <option value=\"2\">Cosmos DB</option>\n                    </select>\n                </div>\n\n                <div className=\"reports__contairner\">\n\n                    <div className=\"cards__container\">\n                        <div className=\"report__card\" id=\"card-1\">\n                            <h2>NOTICIAS</h2>\n                            <p>{this.state.noticias}</p>\n                        </div>\n                        <div className=\"report__card\" id=\"card-2\">\n                            <h2>HASHTAGS</h2>\n                            <p>{this.state.hashtags}</p>\n                        </div>\n                        <div className=\"report__card\" id=\"card-3\">\n                            <h2>UPVOTES</h2>\n                            <p>{this.state.upvotes}</p>\n                        </div>\n                        <div className=\"report__card\" id=\"card-4\">\n                            <h2>DOWNVOTES</h2>\n                            <p>{this.state.downvotes}</p>\n                        </div>\n                    </div>\n\n                    <div className=\"flex__container\">\n\n                        <div className=\"vrs__container\">\n                            <div className=\"vrs__header\">\n                                <h2>UPVOTES VS DOWNVOTES</h2>\n                                <span className=\"vrs__date\">\n                                    <input type=\"date\" id=\"fecha\" name=\"fecha\" defaultValue={this.state.fecha} onChange={(e) => { this.changeDate(e); }} />\n                                </span>\n                            </div>\n                            <div className=\"vrs__chart\">\n                                <Bars\n                                    upvotes={this.state.vs_upvotes}\n                                    downvotes={this.state.vs_downvotes}\n                                />\n                            </div>\n                        </div>\n\n                        <div className=\"top__container\">\n                            <div className=\"top__header\">\n                                <h2>TOP HASHTAGS</h2>\n                            </div>\n                            <div className=\"top__chart\">\n                                <Pie\n                                    top_five={this.state.top_five}\n                                />\n                            </div>\n                        </div>\n\n                    </div>\n\n                    <div className=\"posts__container\">\n                        <h2>ENTRADAS RECIENTES</h2>\n                        <div className=\"posts__header\">\n                            <p id=\"user__header\">Usuario</p>\n                            <p id=\"date__header\">Fecha</p>\n                            <p id=\"text__header\">Comentario</p>\n                            <p id=\"hashtags__header\">Hashtags</p>\n                        </div>\n                        <div className=\"posts__chart\">\n                            {\n                                this.state.posts.map((tw) => {\n                                    return <LatestNews key={this.state.db + tw.id}\n                                        username={tw.username}\n                                        date={tw.fecha}\n                                        text={tw.content}\n                                        id={tw.id}\n                                        hashtags={tw.hashtags}\n                                        db={this.state.db}\n                                    />\n                                })\n                            }\n                        </div>\n                    </div>\n\n                </div>\n\n            </div>\n\n        );\n    }\n\n}\n\nexport default Reports;","import React from \"react\";\nimport \"./SidebarOption.css\";\n\nconst SidebarOption = (props) => {\n  return (\n    <a href={props.url} className={`sidebarOption`} onClick={props.click}>\n      <props.Icon />\n      {props.text}\n    </a >\n  );\n}\n\nexport default SidebarOption;","import React, { useState } from \"react\";\nimport \"./Sidebar.css\";\nimport SidebarOption from \"./SidebarOption\";\nimport HomeIcon from \"@material-ui/icons/Home\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport NotificationsNoneIcon from \"@material-ui/icons/NotificationsNone\";\nimport ListAltIcon from \"@material-ui/icons/ListAlt\";\nimport MoreHorizIcon from \"@material-ui/icons/MoreHoriz\";\nimport DehazeIcon from '@material-ui/icons/Dehaze';\nimport { Button } from \"@material-ui/core\";\n\nfunction Sidebar(props) {\n\n  const [class_name, setState] = useState({\n    root: \"root__sidebar\",\n    side: \"sidebar\",\n    dehaze: \"dehaze\"\n  });\n\n  function SetVisible() {\n    let root = (class_name.root === 'root__sidebar' ? 'root__hidden' : 'root__sidebar');\n    let side = (class_name.side === 'sidebar' ? 'sidebar__hidden' : 'sidebar');\n    let dehaze = (class_name.dehaze === 'dehaze' ? 'dehaze__hidden' : 'dehaze');\n    let tmp = {\n      root: root,\n      side: side,\n      dehaze: dehaze\n    };\n    setState(tmp);\n  }\n\n  return (\n    <div className={class_name.root}>\n      <div className={class_name.dehaze} onClick={SetVisible}>\n        <DehazeIcon />\n      </div >\n      <div className={class_name.side}>\n        <SidebarOption Icon={HomeIcon} text=\"Home\" click={props.feed} />\n        <SidebarOption Icon={SearchIcon} text=\"Explore\" url=\"https://twitter.com/explore\" />\n        <SidebarOption Icon={NotificationsNoneIcon} text=\"Notifications\" />\n        <SidebarOption Icon={ListAltIcon} text=\"Administrator\" click={props.reports} />\n        <SidebarOption Icon={MoreHorizIcon} text=\"More\" />\n\n        <Button variant=\"outlined\" className=\"sidebar__tweet\" fullWidth>\n          Postear\n        </Button>\n      </div>\n    </div>\n  );\n}\n\nexport default Sidebar;","import { Search } from \"@material-ui/icons\";\nimport React from \"react\";\nimport {\n  TwitterTimelineEmbed,\n  TwitterTweetEmbed\n} from \"react-twitter-embed\";\nimport \"./Widgets.css\";\n\nfunction Widgets() {\n  return (\n    <div className=\"widgets\">\n      <div className=\"widgets__input\">\n        <Search className=\"widgets__searchIcon\" />\n        <input placeholder=\"Search Post\" type=\"text\" />\n      </div>\n\n      <div className=\"widgets__widgetContainer\">\n        <h2>Tendencias para ti</h2>\n        <div className=\"widgets__timeline\">\n          <TwitterTimelineEmbed\n            sourceType=\"profile\"\n            screenName=\"cloudnativegt\"\n            options={{ height: 500 }}\n            theme=\"dark\"\n          />\n        </div>\n        {/* <div className=\"widgets__timeline\">\n          <TwitterTimelineEmbed\n            sourceType=\"profile\"\n            screenName=\"CNCFStudents\"\n            options={{ height: 500 }}\n            theme=\"dark\"\n          />\n        </div> */}\n        <div className=\"widgets__embed\">\n          <TwitterTweetEmbed tweetId={\"1443342195847741444\"} />\n        </div>\n      </div>\n\n      <div className=\"widgets__widgetCopyright\">\n        <p>Universidad de San Carlos de Guatemala</p>\n        <p>Sistemas Operativos 1&nbsp; · &nbsp;Grupo 7</p>\n        <p>&copy; 2021 Proyecto 1&nbsp; · &nbsp;Segundo Semestre</p>\n      </div>\n    </div>\n  );\n}\n\nexport default Widgets;","import { useState } from 'react';\nimport './App.css';\nimport Feed from \"./Feed/Feed\";\nimport Reports from './Reports/Reports';\nimport Sidebar from \"./SidebarOption/Sidebar\";\nimport Widgets from \"./Widgets/Widgets\";\n\nfunction App() {\n  const [state, setState] = useState('home');\n\n  function ViewReports() {\n    setState('reports')\n  }\n\n  function ViewFeed() {\n    setState('home')\n  }\n\n  return (\n    <div className=\"app\">\n      <Sidebar reports={ViewReports} feed={ViewFeed} />\n      {state === 'reports'\n        ? <Reports />\n        : <Feed />}\n      {state === 'home' && <Widgets />}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}